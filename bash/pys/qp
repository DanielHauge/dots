#!/usr/bin/env py

import sys

# if numpy is not installed, echo command to install it
try:
    import numpy as np
except ImportError:
    print("pip install numpy")
    exit()

try:
    import plotille
except ImportError:
    print("pip install plotille")
    exit()


initial = input().split()
while len(initial) < 1:
    initial = input().split()
# check if initial[0] is a number
headers = ["Plot1", "Plot2", "Plot3", "Plot4", "Plot5", "Plot6"]
try:
    float(initial[0])
except ValueError:
    headers = initial
    initial = input().split()
    pass

single_value = len(initial) == 1

scale = sys.argv[1] if len(sys.argv) > 1 else 1

fig = plotille.Figure()
fig.width = int(90 * float(scale))
fig.height = int(30 * float(scale))
fig.color_mode = 'names'


def color(i):
    if i == 0:
        return "red"
    elif i == 1:
        return "green"
    elif i == 2:
        return "blue"
    elif i == 3:
        return "yellow"
    elif i == 4:
        return "cyan"
    elif i == 5:
        return "magenta"
    elif i == 6:
        return "white"


if single_value:
    # Take and save input as long as there is input
    data = []
    val = initial
    while val:
        data.extend(val)
        # Only take input if not EOF
        try:
            val = input().split()
        except EOFError:
            break
    try:
        y = np.array(data).astype(float)
    except ValueError:
        print("Invalid input")
        print(data)
        exit()
    # 0 to length of data
    x = np.arange(len(data))
    fig.plot(x, y, lc='red', label='stdin')
    print(fig.show(legend=True))
else:
    # Take the floor of legnth of initial divided by 2
    n = len(initial)
    # create a n dimensional array of zeros
    x = np.zeros(n)

    vals = initial
    while vals:
        try:
            initial = input().split()
            # float each n values and append to x
            x = np.vstack([x, np.array(initial).astype(float)])

        except EOFError:
            break
        if not initial:
            break
    plot_count = n // 2
    for i in range(plot_count):
        c = color(i)
        # data is x y x y x y
        fig.plot(x[:, i * 2], x[:, i * 2 + 1], lc=c, label=headers[i])
    print(fig.show(legend=True))

# X = np.sort(np.random.rand(100) * 2 * np.pi)
#
#
# Y = np.sin(X)
# fig = plotille.Figure()
# fig.width = 90 * 2
# fig.height = 30 * 2
# # fig.set_x_limits(min_=-1, max_=2)
# # fig.set_y_limits(min_=-2, max_=2)
# fig.color_mode = 'names'
# fig.lc = 'red'
# fig.color = 4
# fig.plot(X, Y, lc='red', label='sin(x)')
# print(fig.show(legend=True))
